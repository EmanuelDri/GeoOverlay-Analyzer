// This is an automatically generated file. Please do not edit this file directly.
'use server';

/**
 * @fileOverview Calculates the percentage of overlap between a barrio and a given polygon.
 *
 * - calculateOverlapPercentage - A function that calculates the percentage of overlap between a barrio and a given polygon.
 * - CalculateOverlapPercentageInput - The input type for the calculateOverlapPercentage function.
 * - CalculateOverlapPercentageOutput - The return type for the calculateOverlapPercentage function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const CalculateOverlapPercentageInputSchema = z.object({
  barrioGeometry: z.string().describe('The GeoJSON geometry of the barrio.'),
  polygonCoordinates: z
    .string()
    .describe(
      'The coordinates of the polygon, as a string. Should be a GeoJSON Polygon.'
    ),
});
export type CalculateOverlapPercentageInput = z.infer<
  typeof CalculateOverlapPercentageInputSchema
>;

const CalculateOverlapPercentageOutputSchema = z.object({
  overlapPercentage: z
    .number()
    .describe(
      'The percentage of overlap between the barrio and the polygon (0-100).' + ' Return null if there is no overlap.'
    )
    .nullable(),
  overlappingPolygon: z
    .string()
    .describe('GeoJSON Polygon representing the overlapping area.').nullable(),
});

export type CalculateOverlapPercentageOutput = z.infer<
  typeof CalculateOverlapPercentageOutputSchema
>;

export async function calculateOverlapPercentage(
  input: CalculateOverlapPercentageInput
): Promise<CalculateOverlapPercentageOutput> {
  return calculateOverlapPercentageFlow(input);
}

const calculateOverlapPercentagePrompt = ai.definePrompt({
  name: 'calculateOverlapPercentagePrompt',
  input: {schema: CalculateOverlapPercentageInputSchema},
  output: {schema: CalculateOverlapPercentageOutputSchema},
  prompt: `You are a geospatial analysis expert. You are given the geometry of a barrio (neighborhood) in Cordoba, Argentina, and a polygon represented by its coordinates. Your task is to calculate the percentage of the barrio that overlaps with the polygon.

Barrio Geometry (GeoJSON): {{{barrioGeometry}}}
Polygon Coordinates (GeoJSON Polygon): {{{polygonCoordinates}}}

Determine the percentage of overlap between the barrio and the polygon. If there is no overlap, return null for the overlapPercentage. Return the overlapping polygon as GeoJSON.`,}
);

const calculateOverlapPercentageFlow = ai.defineFlow(
  {
    name: 'calculateOverlapPercentageFlow',
    inputSchema: CalculateOverlapPercentageInputSchema,
    outputSchema: CalculateOverlapPercentageOutputSchema,
  },
  async input => {
    const {output} = await calculateOverlapPercentagePrompt(input);
    return output!;
  }
);
